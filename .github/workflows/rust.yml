name: Release

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  PROJECT_NAME: "alice-engine"

jobs:
  build:
    runs-on: ${{ matrix.runner }}

    strategy:
      matrix:
        include:
          - name: linux-amd64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - name: win-amd64
            runner: windows-latest
            target: x86_64-pc-windows-msvc
          - name: macos-amd64
            runner: macos-latest
            target: x86_64-apple-darwin
          - name: macos-arm64
            runner: macos-latest
            target: aarch64-apple-darwin
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
 
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "${{ matrix.target }}"
 
      - name: Setup Cache
        uses: Swatinem/rust-cache@v2
 
      - name: Build Binary
        run: cargo build --verbose --locked --release --target ${{ matrix.target }}

      - name: Upload Binary
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.name }}
          path: target/${{ matrix.target }}/release/${PROJECT_NAME}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}

      - name: Create tag
        id: create_tag
        shell: pwsh
        run: |
          # Set the version number to the current date and time
          $VERSION="release-$(Get-Date -Format "yyyyMMddHHmmss")"
          echo "::set-output name=version::$VERSION"
          # Create the tag
          git tag $VERSION
          # Push the tag to the remote repository
          git push origin $VERSION
        env:
          GIT_COMMITTER_NAME: github-actions
          GIT_COMMITTER_EMAIL: github-actions@github.com

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: ${{ steps.create_tag.outputs.version }}
          release_name: Release ${{ steps.create_tag.outputs.version }}      
          draft: false
          prerelease: true

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Upload artifacts to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/${{ matrix.name }}
          asset_name: ${{ matrix.name }}
          asset_content_type: application/octet-stream